# 导入pymysql模块，请求mysql数据库
import pymysql

#打开数据库 创建连接
#括号里面的参数分别包括: 主机地址 端口 用户 密码  数据库   编码-->存在中文的时候，连接需要添加charset='utf8'，否则中文显示乱码。
#password 可以缩写为passwd   database可以缩写为db
conn = pymysql.connect(host="localhost",port=3306,user="root", password="1234", db="barn", charset="utf8")
                        #主机地址也可以用  "127.0.0.1"  这个表示本机的意思
#打印连接内容
print(conn)

#创建游标
cursor = conn.cursor()
#执行sql语句，并返回受影响行数 使用execute()方法执行sql语句
effect_row = cursor.execute('select * from `上河湾分库_1号罩棚_2019_02_18_09_35_41`')
print(effect_row)
#输出为252，该数据库共有252行数据
sql = 'select * from `上河湾分库_1号罩棚_2019_02_18_09_35_41`'
cursor.execute(sql)

#获取数据
#获取结果的第一行数据 ''fetchone()''  fetch 拿来，请求  fetchone请求一个
#单独使用一个fetchone会获取索引为0的记录，若使用多个fetchone时，会按照前一个的索引值继续向下获取记录

data1 = cursor.fetchone() #fetch 拿来，请求  fetchone请求一个
data2 = cursor.fetchone()
data3 = cursor.fetchone()
print(data1,'\n',data2,'\n',data3)
'''
首先要有数据库，其次数据库里要有数据
输出为: ('40288146688299ea016882bff2f0001d', '上河湾分库_1号罩棚', '2019_02_18_09_35_41', 6, 1, 1, -4.38) 
'''
#获取剩余结果的前n行数据 ''fetchmany()'' fetch 拿来，请求  fetchmany请求多个
data4 = cursor.fetchmany(3)
print(data4)
'''
输出为:  (('40288146688299ea016882bff2f0001d', '上河湾分库_1号罩棚', '2019_02_18_09_35_41', 6, 1, 4, -4.66),
        ('40288146688299ea016882bff2f0001d', '上河湾分库_1号罩棚', '2019_02_18_09_35_41', 6, 1, 5, -1.05), 
        ('40288146688299ea016882bff2f0001d', '上河湾分库_1号罩棚', '2019_02_18_09_35_41', 6, 1, 6, -1.77))
'''
#获取剩余结果所有数据
all = cursor.fetchall()
for i in all:
    print(i)
'''
输出为:
('40288146688299ea016882bff2f0001d', '上河湾分库_1号罩棚', '2019_02_18_09_35_41', 6, 1, 7, -0.33)
('40288146688299ea016882bff2f0001d', '上河湾分库_1号罩棚', '2019_02_18_09_35_41', 6, 1, 8, -0.05)
('40288146688299ea016882bff2f0001d', '上河湾分库_1号罩棚', '2019_02_18_09_35_41', 6, 1, 9, -3.83)
('40288146688299ea016882bff2f0001d', '上河湾分库_1号罩棚', '2019_02_18_09_35_41', 6, 1, 10, -1.72)
('40288146688299ea016882bff2f0001d', '上河湾分库_1号罩棚', '2019_02_18_09_35_41', 6, 1, 11, -1.66)
('40288146688299ea016882bff2f0001d', '上河湾分库_1号罩棚', '2019_02_18_09_35_41', 6, 1, 12, -1.5)
('40288146688299ea016882bff2f0001d', '上河湾分库_1号罩棚', '2019_02_18_09_35_41', 6, 1, 13, -0.11)
('40288146688299ea016882bff2f0001d', '上河湾分库_1号罩棚', '2019_02_18_09_35_41', 6, 1, 14, -4.05)
('40288146688299ea016882bff2f0001d', '上河湾分库_1号罩棚', '2019_02_18_09_35_41', 6, 2, 1, -3.05)
('40288146688299ea016882bff2f0001d', '上河湾分库_1号罩棚', '2019_02_18_09_35_41', 6, 2, 2, -1.83)
('40288146688299ea016882bff2f0001d', '上河湾分库_1号罩棚', '2019_02_18_09_35_41', 6, 2, 3, -3.16)
('40288146688299ea016882bff2f0001d', '上河湾分库_1号罩棚', '2019_02_18_09_35_41', 6, 2, 4, -4.88)
'''
#获取是依次获取获取剩下的

#游标默认获取的数据是元组类型，如果想要获取其它类型的数据或者字典类型的数据
#改变游标:      .cursor(cursor=pymysql.cursors.DictCursor)
cursor = conn.cursor(cursor=pymysql.cursors.DictCursor)
cursor.execute('select * from `1`') #游标移到最后时不能再往下获取数据，需要再执行一边sql语句
print(cursor.fetchone())

#提交，不然无法保存新建或者修改的数据
conn.commit()
#关闭游标
cursor.close()
#关闭连接
conn.close()